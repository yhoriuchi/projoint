[{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"estimate-corrected-mms-or-amces","dir":"Articles","previous_headings":"","what":"üéØ Estimate Corrected MMs or AMCEs","title":"Analyze and Visualize Important QOIs","text":"conjoint analysis, default MMs AMCEs can biased due measurement error intra-respondent variability. projoint corrects bias automatically. following instructions apply choice-level data. profile-level data?‚ìò FAQ Page instructions estimate visualize profile-level QOIs.","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"prepare-example-data","dir":"Articles","previous_headings":"","what":"üì¶ Prepare Example Data","title":"Analyze and Visualize Important QOIs","text":"Outcome naming & order (important) List .outcomes order questions asked. repeated task, outcome must last element. base tasks (last), function reads digits name task id (e.g., \"choice4\", \"Q4\", \"task04\" ‚Üí task 4). repeated base task inferred first base outcome‚Äôs digits. repeated outcome need contain digits‚Äîposition (last) matters. Outcome strings end choice labels; default parse last character expect \"\"/\"B\". survey uses \"1\"/\"2\" (endings), set .choice_labels accordingly. Examples","code":"# Standard order; repeated = task 1 outcomes <- c(paste0(\"choice\", 1:8), \"choice1_repeated_flipped\") out1 <- reshape_projoint(exampleData1, outcomes)"},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"why-use-ids-e-g--att1-level1","dir":"Articles","previous_headings":"","what":"üõ†Ô∏è Why Use IDs (e.g., att1, level1)?","title":"Analyze and Visualize Important QOIs","text":"estimating quantities, ‚Äôs important understand attribute level IDs work inside projoint. recommend working attribute IDs rather actual text labels : Safer special characters, languages, typos Allows multiple attributes identical labels (e.g., ‚ÄúHigh‚Äù ‚ÄúTeaching Quality‚Äù ‚ÄúResearch Quality‚Äù) Check attribute-level mappings: can also save labels easier editing:","code":"out1$labels ## # A tibble: 24 √ó 4 ##    attribute                level                        attribute_id level_id   ##    <chr>                    <chr>                        <chr>        <chr>      ##  1 Housing Cost             15% of pre-tax income        att1         att1:leve‚Ä¶ ##  2 Housing Cost             30% of pre-tax income        att1         att1:leve‚Ä¶ ##  3 Housing Cost             40% of pre-tax income        att1         att1:leve‚Ä¶ ##  4 Presidential Vote (2020) 30% Democrat, 70% Republican att2         att2:leve‚Ä¶ ##  5 Presidential Vote (2020) 50% Democrat, 50% Republican att2         att2:leve‚Ä¶ ##  6 Presidential Vote (2020) 70% Democrat, 30% Republican att2         att2:leve‚Ä¶ ##  7 Racial Composition       50% White, 50% Nonwhite      att3         att3:leve‚Ä¶ ##  8 Racial Composition       75% White, 25% Nonwhite      att3         att3:leve‚Ä¶ ##  9 Racial Composition       90% White, 10% Nonwhite      att3         att3:leve‚Ä¶ ## 10 Racial Composition       96% White, 4% Nonwhite       att3         att3:leve‚Ä¶ ## # ‚Ñπ 14 more rows save_labels(out1, \"labels.csv\")"},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"estimate-marginal-means-mms","dir":"Articles","previous_headings":"","what":"üìà Estimate Marginal Means (MMs)","title":"Analyze and Visualize Important QOIs","text":"Suppose want estimate, within given profile pair, probability choosing profile includes ‚Äú40% pre-tax income‚Äù (level3) Housing Cost (att1) rather one includes ‚Äú15% pre-tax income‚Äù (level1) attribute, averaging combinations attributes across respondents; use following code:","code":"qoi <- set_qoi(   .structure = \"choice_level\",   .att_choose = \"att1\",   .lev_choose = \"level3\",   .att_notchoose = \"att1\",   .lev_notchoose = \"level1\" )  mm2 <- projoint(out1, qoi) print(mm2) ##  ## Projoint results object ## ------------------------- ## Estimand:  mm  ## Structure:  choice_level  ## Standard error method:  analytical  ## IRR:  Estimated  ## Tau:  0.172  ## Number of estimates:  2 summary(mm2) ##  ## Summary of Projoint Estimates ## ------------------------------ ## Estimand: mm ## Structure: choice_level ## Standard error method: analytical ## SE type (lm_robust):   CR2 (clustered by id) ## IRR: Estimated ## Tau: 0.172 ## # A tibble: 2 √ó 7 ##   estimand       estimate     se conf.low conf.high att_level_choose ##   <chr>             <dbl>  <dbl>    <dbl>     <dbl> <chr>            ## 1 mm_uncorrected    0.419 0.0197    0.380     0.458 att1:level3      ## 2 mm_corrected      0.376 0.0308    0.316     0.437 att1:level3      ## # ‚Ñπ 1 more variable: att_level_notchoose <chr>"},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"estimate-amces","dir":"Articles","previous_headings":"","what":"üìâ Estimate AMCEs","title":"Analyze and Visualize Important QOIs","text":"Suppose want quantify choice probability changes following profile pairs: choosing profile includes ‚Äú40% pre-tax income‚Äù (level3) Housing Cost (att1) versus one includes ‚Äú15% pre-tax income‚Äù (level1) Housing Cost (att1); [baseline] choosing profile includes ‚Äú30% pre-tax income‚Äù (level2) Housing Cost (att1) versus one includes ‚Äú15% pre-tax income‚Äù (level1) Housing Cost (att1); averaging combinations attributes across respondents. write following code:","code":"qoi <- set_qoi(   .structure = \"choice_level\",   .estimand = \"amce\",   .att_choose = \"att1\",   .lev_choose = \"level3\",   .att_notchoose = \"att1\",   .lev_notchoose = \"level1\",   .att_choose_b = \"att1\",   .lev_choose_b = \"level2\",   .att_notchoose_b = \"att1\",   .lev_notchoose_b = \"level1\" )  amce2 <- projoint(out1, qoi) print(amce2) ##  ## Projoint results object ## ------------------------- ## Estimand:  amce  ## Structure:  choice_level  ## Standard error method:  analytical  ## IRR:  Estimated  ## Tau:  0.172  ## Number of estimates:  2 summary(amce2) ##  ## Summary of Projoint Estimates ## ------------------------------ ## Estimand: amce ## Structure: choice_level ## Standard error method: analytical ## SE type (lm_robust):   CR2 (clustered by id) ## IRR: Estimated ## Tau: 0.172 ## # A tibble: 2 √ó 9 ##   estimand         estimate     se conf.low conf.high att_level_choose ##   <chr>               <dbl>  <dbl>    <dbl>     <dbl> <chr>            ## 1 amce_uncorrected  -0.0135 0.0269  -0.0665    0.0394 att1:level3      ## 2 amce_corrected    -0.0206 0.0412  -0.102     0.0604 att1:level3      ## # ‚Ñπ 3 more variables: att_level_notchoose <chr>, ## #   att_level_choose_baseline <chr>, att_level_notchoose_baseline <chr>"},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"predict-intra-respondent-reliability-irr","dir":"Articles","previous_headings":"","what":"üîé Predict Intra-Respondent Reliability (IRR)","title":"Analyze and Visualize Important QOIs","text":"design include repeated task, can predict IRR using predict_tau(), based observed respondent behavior.","code":"data(out1_arranged) predicted_irr <- predict_tau(out1_arranged)  print(predicted_irr) ## Tau estimated using the extrapolation method: 0.743 summary(predicted_irr) ## # A tibble: 8 √ó 2 ##       x predicted ##   <int>     <dbl> ## 1     0     0.743 ## 2     1     0.709 ## 3     2     0.675 ## 4     3     0.640 ## 5     4     0.606 ## 6     5     0.572 ## 7     6     0.537 ## 8     7     0.503 plot(predicted_irr)"},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"visualize-mms-or-amces","dir":"Articles","previous_headings":"","what":"üé® Visualize MMs or AMCEs","title":"Analyze and Visualize Important QOIs","text":"projoint package provides ready--publish plotting tools conjoint analysis results. Note: current version projoint supports plotting choice-level MMs . Support choice-level AMCEs available future updates!","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"choice-level-analysis","dir":"Articles","previous_headings":"üé® Visualize MMs or AMCEs","what":"‚öñÔ∏è Choice-Level Analysis","title":"Analyze and Visualize Important QOIs","text":"Specify quantity interest: Estimate","code":"qoi_mm <- set_qoi(   .structure = \"choice_level\", # default   .att_choose = \"att1\",    .lev_choose = \"level1\",    .att_notchoose = \"att1\",    .lev_notchoose = \"level3\" ) choice_mm <- projoint(   .data = out1_arranged,    .qoi = qoi_mm,    .ignore_position = TRUE ) plot(choice_mm) plot(choice_mm, .type = \"pointrange\")"},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"explore-and-compare-further","dir":"Articles","previous_headings":"","what":"üåü Explore and Compare Further","title":"Analyze and Visualize Important QOIs","text":"Choice-level analysis opens door many new research questions traditional profile-level analysis often overlooks. , demonstrate estimate deeper quantities compare subgroups effectively. Depending objectives, may want reorganize data projoint_data object. helper function internal package, can call explicitly script.‚Äù","code":"projoint_data <- function(labels, data) {   structure(     list(labels = labels, data = data),     class = \"projoint_data\"   ) }"},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"setup","dir":"Articles","previous_headings":"","what":"üì¶ Setup","title":"Analyze and Visualize Important QOIs","text":"use already wrangled cleaned data out1_arranged.","code":"out1_arranged$labels ## # A tibble: 24 √ó 4 ##    attribute                     level                   attribute_id level_id   ##    <chr>                         <chr>                   <chr>        <chr>      ##  1 Housing Cost (Pre-tax Income) 15%                     att1         att1:leve‚Ä¶ ##  2 Housing Cost (Pre-tax Income) 30%                     att1         att1:leve‚Ä¶ ##  3 Housing Cost (Pre-tax Income) 40%                     att1         att1:leve‚Ä¶ ##  4 Presidential Vote (2020)      50% Dem, 50% Rep        att2         att2:leve‚Ä¶ ##  5 Presidential Vote (2020)      30% Dem, 70% Rep        att2         att2:leve‚Ä¶ ##  6 Presidential Vote (2020)      70% Dem, 30% Rep        att2         att2:leve‚Ä¶ ##  7 Racial Composition            50% White, 50% Nonwhite att3         att3:leve‚Ä¶ ##  8 Racial Composition            75% White, 25% Nonwhite att3         att3:leve‚Ä¶ ##  9 Racial Composition            90% White, 10% Nonwhite att3         att3:leve‚Ä¶ ## 10 Racial Composition            96% White, 4% Nonwhite  att3         att3:leve‚Ä¶ ## # ‚Ñπ 14 more rows"},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"explore-compare-trade-offs-directly","dir":"Articles","previous_headings":"","what":"‚öñÔ∏è Explore: Compare Trade-offs Directly","title":"Analyze and Visualize Important QOIs","text":"Goal. Compare choices two joint profiles: Low housing cost high violent‚Äëcrime rate, versus High housing cost low violent‚Äëcrime rate. (Optional) Sanity checks Recreate projoint_data object, set QOI, plot.","code":"# 1) Data: keep only the two joint profiles of interest d1 <- out1_arranged$data d2 <- d1 |>    mutate(y1 = case_when(     # Low housing cost, high crime     att1 == \"att1:level1\" & att6 == \"att6:level2\" ~ 1,     TRUE ~ 0   ),   y0 = case_when(     # High housing cost, low crime     att1 == \"att1:level3\" & att6 == \"att6:level1\" ~ 1,     TRUE ~ 0   )) |>    filter(y1 == 1 | y0 == 1)  # 2) Labels: rename only the two att1 levels to reflect the joint trade-offs labels1 <- out1_arranged$labels labels2 <- labels1 |>    mutate(level = case_when(level_id == \"att1:level1\" ~ \"Housing Cost (Low)\\nCrime Rate(High)\",                             level_id == \"att1:level3\" ~ \"Housing Cost (High)\\nCrime Rate(Low)\",                             TRUE ~ level_id)) d1 |> count(att1, att6) ## # A tibble: 6 √ó 3 ##   att1        att6            n ##   <chr>       <chr>       <int> ## 1 att1:level1 att6:level1  1045 ## 2 att1:level1 att6:level2  1069 ## 3 att1:level2 att6:level1  1121 ## 4 att1:level2 att6:level2  1034 ## 5 att1:level3 att6:level1  1059 ## 6 att1:level3 att6:level2  1072 d2 |> count(att1, att6) # only the two joint profiles remain ## # A tibble: 2 √ó 3 ##   att1        att6            n ##   <chr>       <chr>       <int> ## 1 att1:level1 att6:level2  1069 ## 2 att1:level3 att6:level1  1059 labels1 |> filter(attribute_id == \"att1\") ## # A tibble: 3 √ó 4 ##   attribute                     level attribute_id level_id    ##   <chr>                         <chr> <chr>        <chr>       ## 1 Housing Cost (Pre-tax Income) 15%   att1         att1:level1 ## 2 Housing Cost (Pre-tax Income) 30%   att1         att1:level2 ## 3 Housing Cost (Pre-tax Income) 40%   att1         att1:level3 labels2 |> filter(attribute_id == \"att1\" & level_id %in% c(\"att1:level1\", \"att1:level3\")) ## # A tibble: 2 √ó 4 ##   attribute                     level                      attribute_id level_id ##   <chr>                         <chr>                      <chr>        <chr>    ## 1 Housing Cost (Pre-tax Income) \"Housing Cost (Low)\\nCrim‚Ä¶ att1         att1:le‚Ä¶ ## 2 Housing Cost (Pre-tax Income) \"Housing Cost (High)\\nCri‚Ä¶ att1         att1:le‚Ä¶ # 3) Build a new projoint_data object pj_data_wrangled <- projoint_data(\"labels\" = labels2,                                    \"data\" = d2)  # 4) Quantity of interest: Low vs High housing cost under the specified crime conditions (choice-level MM) qoi <- set_qoi(   .att_choose = \"att1\",    .lev_choose = \"level1\", # Low housing cost (with high crime in this subset)   .att_notchoose = \"att1\",    .lev_notchoose = \"level3\" # High housing cost (with low crime in this subset) )  # 5) Estimate and plot (horizontal layout) out <- projoint(pj_data_wrangled, qoi) plot(out)"},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"explore-compare-multiple-levels-simultaneously","dir":"Articles","previous_headings":"","what":"üß© Explore: Compare Multiple Levels Simultaneously","title":"Analyze and Visualize Important QOIs","text":"Goal. Collapse att7 two buckets‚ÄîCity (levels 1‚Äì2) vs.¬†Suburban (levels 5‚Äì6)‚Äîre‚Äëestimate plot. (Optional) Sanity checks Recreate projoint_data object, set QOI, plot.","code":"# 1) Data: collapse levels for att7 d1 <- out1_arranged$data d2 <- d1 |>   mutate(     att7 = case_when(       att7 %in% c(\"att7:level1\", \"att7:level2\") ~ \"att7:level7\",  # City       att7 %in% c(\"att7:level5\", \"att7:level6\") ~ \"att7:level8\",  # Suburban       TRUE ~ att7     )   )  # 2) Labels: create matching level IDs and readable names labels1 <- out1_arranged$labels labels2 <- labels1 |>   mutate(     level_id = case_when(       level_id %in% c(\"att7:level1\", \"att7:level2\") ~ \"att7:level7\",       level_id %in% c(\"att7:level5\", \"att7:level6\") ~ \"att7:level8\",       TRUE ~ level_id     ),     level = case_when(       level_id == \"att7:level7\" ~ \"City\",       level_id == \"att7:level8\" ~ \"Suburban\",       TRUE ~ level     )   ) |>   distinct() d1 |> count(att7) ## # A tibble: 6 √ó 2 ##   att7            n ##   <chr>       <int> ## 1 att7:level1  1032 ## 2 att7:level2  1047 ## 3 att7:level3  1117 ## 4 att7:level4  1092 ## 5 att7:level5  1045 ## 6 att7:level6  1067 d2 |> count(att7) ## # A tibble: 4 √ó 2 ##   att7            n ##   <chr>       <int> ## 1 att7:level3  1117 ## 2 att7:level4  1092 ## 3 att7:level7  2079 ## 4 att7:level8  2112 labels1 |> filter(attribute_id == \"att7\") ## # A tibble: 6 √ó 4 ##   attribute     level                       attribute_id level_id    ##   <chr>         <chr>                       <chr>        <chr>       ## 1 Type of Place City, more residential area att7         att7:level1 ## 2 Type of Place City, downtown area         att7         att7:level2 ## 3 Type of Place Rural area                  att7         att7:level3 ## 4 Type of Place Small town                  att7         att7:level4 ## 5 Type of Place Suburban, only houses       att7         att7:level5 ## 6 Type of Place Suburban, downtown area     att7         att7:level6 labels2 |> filter(attribute_id == \"att7\") ## # A tibble: 4 √ó 4 ##   attribute     level      attribute_id level_id    ##   <chr>         <chr>      <chr>        <chr>       ## 1 Type of Place City       att7         att7:level7 ## 2 Type of Place Rural area att7         att7:level3 ## 3 Type of Place Small town att7         att7:level4 ## 4 Type of Place Suburban   att7         att7:level8 # 3) Build a new projoint_data object pj_data_wrangled <- projoint_data(\"labels\" = labels2,                                    \"data\" = d2)  # 4) Quantity of interest: City vs. Suburban (choice-level MM) qoi <- set_qoi(   .structure     = \"choice_level\",   .att_choose    = \"att7\",   .lev_choose    = \"level7\",  # City   .att_notchoose = \"att7\",   .lev_notchoose = \"level8\"   # Suburban )  # 5) Estimate and plot (horizontal layout) out <- projoint(pj_data_wrangled, qoi) plot(out)"},{"path":"https://yhoriuchi.github.io/projoint/articles/analyze.html","id":"compare-subgroup-differences","dir":"Articles","previous_headings":"","what":"üìä Compare: Subgroup Differences","title":"Analyze and Visualize Important QOIs","text":"üè† Home: Home","code":"df_D <- exampleData1 |> filter(party_1 == \"Democrat\") |> reshape_projoint(outcomes) df_R <- exampleData1 |> filter(party_1 == \"Republican\") |> reshape_projoint(outcomes) df_0 <- exampleData1 |> filter(party_1 %in% c(\"Something else\", \"Independent\")) |> reshape_projoint(outcomes)  qoi <- set_qoi(   .structure = \"choice_level\",   .estimand = \"mm\",   .att_choose = \"att2\",   .lev_choose = \"level3\",   .att_notchoose = \"att2\",   .lev_notchoose = \"level1\" )  out_D <- projoint(df_D, qoi) out_R <- projoint(df_R, qoi) out_0 <- projoint(df_0, qoi)  out_merged <- bind_rows(   out_D$estimates |> mutate(party = \"Democrat\"),   out_R$estimates |> mutate(party = \"Republican\"),   out_0$estimates |> mutate(party = \"Independent\") ) |> filter(estimand == \"mm_corrected\")  # Plot  ggplot(out_merged, aes(y = party, x = estimate)) +   geom_vline(xintercept = 0.5, linetype = \"dashed\", color = \"gray\") +   geom_pointrange(aes(xmin = conf.low, xmax = conf.high)) +   geom_text(aes(label = format(round(estimate, 2), nsmall = 2)), vjust = -1) +   labs(y = NULL, x = \"Choice-level Marginal Mean\",        title = \"Preference for Democratic-majority areas\") +   theme_classic()"},{"path":"https://yhoriuchi.github.io/projoint/articles/correct.html","id":"why-correct-for-measurement-error","dir":"Articles","previous_headings":"","what":"Why Correct for Measurement Error?","title":"Correct Measurement-Error Bias","text":"conjoint experiments, measurement error pervasive often overlooked. Misread attributes Misunderstand levels Click randomly Forget information across tasks result, respondents‚Äô recorded choices often refelect random noise. random error leads attenuate true prefernces (true effects).","code":""},{"path":[]},{"path":"https://yhoriuchi.github.io/projoint/articles/correct.html","id":"how-projoint-corrects-for-measurement-error","dir":"Articles","previous_headings":"","what":"How projoint Corrects for Measurement Error","title":"Correct Measurement-Error Bias","text":"Estimates intra-respondent reliability (IRR) based responses repeated task Adjusts marginal means (MMs) average marginal component effects (AMCEs) accordingly Provides corrected estimates better reflect respondents‚Äô true preferences Corrected estimates reveal true magnitude effects, improving theoretical applied inferences political science, marketing, fields. ‚úÖ additional respondent burden (just one repeated task) ‚úÖ Minimal survey design changes ‚úÖ Massive improvements accuracy","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/correct.html","id":"key-takeaway","dir":"Articles","previous_headings":"","what":"Key Takeaway","title":"Correct Measurement-Error Bias","text":"üß† Measurement error systematically biases results. üî• Correcting measurement error reveals true preferences, sharper trade-offs, prevents misleading inferences.","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/correct.html","id":"key-reference","dir":"Articles","previous_headings":"","what":"üìö Key Reference","title":"Correct Measurement-Error Bias","text":"Clayton, Horiuchi, Kaufman, King, Komisarchik (Forthcoming). ‚ÄúCorrecting Measurement Error Bias Conjoint Survey Experiments.‚ÄùForthcoming, American Journal Political Science.Pre-Print Available","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/design.html","id":"set-up-your-survey-using-the-projoint-survey-design-tool","dir":"Articles","previous_headings":"","what":"Set Up Your Survey Using the Projoint Survey Design Tool","title":"Design Your Survey","text":"Using Projoint Survey Design Tool, can easily: Set attributes levels Randomize attributes levels weights Add cross-attributes cross-profile constraints Automatically create repeated task intra-respondent reliability (IRR) estimation Generate test responses checking design üöÄ Export survey directly Qualtrics (QSF format) ‚úÖ","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/design.html","id":"how-to-use-the-projoint-survey-design-tool","dir":"Articles","previous_headings":"","what":"How to Use the Projoint Survey Design Tool","title":"Design Your Survey","text":"following instructions taken directly Projoint Survey Design Tool‚Äôs Tutorial section. important part discrete choice experiment setting attributes levels: features getting randomized. Add attributes clicking ‚ÄúAdd Attribute‚Äù button, add levels clicking ‚ÄúAdd Level‚Äù button. two advanced options page users add attributes levels. first controls order attributes appear respondents. clicking padlock icon right attribute, user can control appear. locked icon always appear indicated position, second attribute locked, attribute always appear second list attributes shown respondents. second advanced option controls randomization weights, can accesed clicking ‚ÄúEdit Weights‚Äù button. allows researchers set frequently level appear. choice experiments set level equal frequency, necessarily preferred. set attributes levels, recommend going Preview screen preview study. produces single task, can refreshed, researcher can see respondents see. Number profiles: defaults 2, binary comparison, can positive integer. recommend 5. Number tasks: number distinct comparison tasks respondent sees. tasks produces data, also potentially fatigues respondent. Repeated task: toggles whether one tasks respondents see exact duplicate previous task. comparing rate respondents give answer identical questions, possible measure correct certain type measurement error conjoint studies. strongly recommend turning . Repeated task shuffled: Option either flip columns repeated tasks. task repeat?: tasks repeated? can range 1 N N number tasks. repeat?: repeated task go? can range K K index task repeated N+1 N number tasks. Ordering attributes: order attributes randomized? three options Non random, Participant randomized, Task randomized. Non-random says every respondent every task attribute order: one specified . Participant-randomized says participant sees different attribute order, attribute order participant‚Äôs tasks. words, participant sees one ordering attributes. Task-randomized says every task independently-randomized attribute order. recommend Participant-randomized less confusing participants. two types restrictions discuss: cross-attribute restrictions cross-profile restrictions. Cross-attribute restrictions prevent profile logically inconsistent. example, conjoint study comparing potential immigrants, immigrant middle school education, career neurosurgeon. Cross-profile restrictions produce dependencies across different profiles one task. example, conjoint study comparing political candidates two-party, one candidate polling 60%, must polling 40% less. four options exporting survey, recommend users least three : Exporting CSV produces user-specified number test data indicating attributes levels number random tasks. recommend using double-check restrictions randomization weights successfully applied, well conduct power analysis. Exporting JSON produces file containing information user set defining survey. recommend saving can recreate survey settings clear cookies. JSON file can imported web tool, automating process. Exporting JavaScript (JS) produces file can uploaded Qualtrics perform randomization. Exporting Qualtrics produces .QSF file can loaded Qualtrics, automatically populating survey appropriate randomization correct question tasks.","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/design.html","id":"other-options","dir":"Articles","previous_headings":"","what":"Other Options","title":"Design Your Survey","text":"interested researchers previously set conjoint surveys, see FAQ Page instructions using alternative tools‚ìò üè† Home: Home","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/faq.html","id":"what-is-the-history-of-conjoint-analysis-what-is-the-difference-between-profile-level-and-choice-level-data","dir":"Articles","previous_headings":"","what":"What is the history of conjoint analysis? What is the difference between ‚Äúprofile-level‚Äù and ‚Äúchoice-level‚Äù data?","title":"FAQ Page","text":"respondent given two different profiles (e.g., product) asked rate profiles. meant rating thought observation. Thus, researchers allowed ‚Äústack‚Äù data vertically, one profile-per-row (.e., ‚Äúprofile-level data‚Äù). However, respondents asked make choice two profiles, profiles longer independent; choosing one necessarily meant choosing . researchers often still stack data profile-level, case. Instead, use choice-level data, whereby choice consisting two profiles recorded single observation. See choice-level analysis article information profile-level vs.¬†choice-level structure.","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/faq.html","id":"what-if-i-have-profile-level-data","dir":"Articles","previous_headings":"","what":"What if I have profile-level data?","title":"FAQ Page","text":"Use .by_var comparing profile-level MMs two groups (e.g., Democrats vs.¬†Republicans).","code":"mm0 <- projoint(out1, .structure = \"profile_level\", .estimand = \"mm\") print(mm0) ##  ## Projoint results object ## ------------------------- ## Estimand:  mm  ## Structure:  profile_level  ## Standard error method:  analytical  ## IRR:  Estimated  ## Tau:  0.172  ## Number of estimates:  48 summary(mm0) ##  ## Summary of Projoint Estimates ## ------------------------------ ## Estimand: mm ## Structure: profile_level ## Standard error method: analytical ## SE type (lm_robust):   CR2 (clustered by id) ## IRR: Estimated ## Tau: 0.172 ## # A tibble: 48 √ó 6 ##    estimand       estimate     se conf.low conf.high att_level_choose ##    <chr>             <dbl>  <dbl>    <dbl>     <dbl> <chr>            ##  1 mm_uncorrected    0.574 0.0142    0.546     0.602 att1:level1      ##  2 mm_corrected      0.614 0.0219    0.571     0.657 att1:level1      ##  3 mm_uncorrected    0.485 0.0136    0.458     0.511 att1:level2      ##  4 mm_corrected      0.477 0.0207    0.436     0.517 att1:level2      ##  5 mm_uncorrected    0.445 0.0142    0.417     0.472 att1:level3      ##  6 mm_corrected      0.416 0.0219    0.372     0.459 att1:level3      ##  7 mm_uncorrected    0.489 0.0150    0.459     0.518 att2:level1      ##  8 mm_corrected      0.483 0.0229    0.438     0.528 att2:level1      ##  9 mm_uncorrected    0.524 0.0133    0.497     0.550 att2:level2      ## 10 mm_corrected      0.536 0.0203    0.496     0.576 att2:level2      ## # ‚Ñπ 38 more rows qoi_1 <- set_qoi(   .structure = \"profile_level\",   .estimand = \"mm\",   .att_choose = \"att1\",   .lev_choose = \"level1\" )  mm1 <- projoint(out1, .qoi = qoi_1) print(mm1) ##  ## Projoint results object ## ------------------------- ## Estimand:  mm  ## Structure:  profile_level  ## Standard error method:  analytical  ## IRR:  Estimated  ## Tau:  0.172  ## Number of estimates:  2 summary(mm1) ##  ## Summary of Projoint Estimates ## ------------------------------ ## Estimand: mm ## Structure: profile_level ## Standard error method: analytical ## SE type (lm_robust):   CR2 (clustered by id) ## IRR: Estimated ## Tau: 0.172 ## # A tibble: 2 √ó 7 ##   estimand       estimate     se conf.low conf.high att_level_choose ##   <chr>             <dbl>  <dbl>    <dbl>     <dbl> <chr>            ## 1 mm_uncorrected    0.574 0.0142    0.546     0.602 att1:level1      ## 2 mm_corrected      0.614 0.0219    0.571     0.657 att1:level1      ## # ‚Ñπ 1 more variable: att_level_notchoose <chr> mm1b <- projoint(out1, .qoi = qoi_1, .irr = 0.75) print(mm1b) ##  ## Projoint results object ## ------------------------- ## Estimand:  mm  ## Structure:  profile_level  ## Standard error method:  analytical  ## IRR:  Assumed (0.75)  ## Tau:  0.146  ## Number of estimates:  2 summary(mm1b) ##  ## Summary of Projoint Estimates ## ------------------------------ ## Estimand: mm ## Structure: profile_level ## Standard error method: analytical ## SE type (lm_robust):   CR2 (clustered by id) ## IRR: Assumed (0.75) ## Tau: 0.146 ## # A tibble: 2 √ó 7 ##   estimand       estimate     se conf.low conf.high att_level_choose ##   <chr>             <dbl>  <dbl>    <dbl>     <dbl> <chr>            ## 1 mm_uncorrected    0.574 0.0142    0.546     0.602 att1:level1      ## 2 mm_corrected      0.605 0.0201    0.566     0.645 att1:level1      ## # ‚Ñπ 1 more variable: att_level_notchoose <chr> amce0 <- projoint(out1, .structure = \"profile_level\", .estimand = \"amce\") ## Warning in sqrt(diag(vcov_fit$Vcov_hat)): NaNs produced print(amce0) ##  ## Projoint results object ## ------------------------- ## Estimand:  amce  ## Structure:  profile_level  ## Standard error method:  analytical  ## IRR:  Estimated  ## Tau:  0.172  ## Number of estimates:  34 summary(amce0) ##  ## Summary of Projoint Estimates ## ------------------------------ ## Estimand: amce ## Structure: profile_level ## Standard error method: analytical ## SE type (lm_robust):   CR2 (clustered by id) ## IRR: Estimated ## Tau: 0.172 ## # A tibble: 34 √ó 7 ##    estimand         estimate     se conf.low conf.high att_level_choose ##    <chr>               <dbl>  <dbl>    <dbl>     <dbl> <chr>            ##  1 amce_uncorrected -0.0899  0.0236  -0.136    -0.0435 att1:level2      ##  2 amce_corrected   -0.137   0.0360  -0.208    -0.0662 att1:level2      ##  3 amce_uncorrected -0.130   0.0250  -0.179    -0.0808 att1:level3      ##  4 amce_corrected   -0.198   0.0386  -0.274    -0.122  att1:level3      ##  5 amce_uncorrected  0.0348  0.0244  -0.0132    0.0828 att2:level2      ##  6 amce_corrected    0.0530  0.0372  -0.0202    0.126  att2:level2      ##  7 amce_uncorrected -0.00177 0.0263  -0.0536    0.0500 att2:level3      ##  8 amce_corrected   -0.00270 0.0402  -0.0817    0.0763 att2:level3      ##  9 amce_uncorrected  0.0240  0.0233  -0.0218    0.0699 att3:level2      ## 10 amce_corrected    0.0366  0.0357  -0.0336    0.107  att3:level2      ## # ‚Ñπ 24 more rows ## # ‚Ñπ 1 more variable: att_level_choose_baseline <chr> qoi_3 <- set_qoi(   .structure = \"profile_level\",   .estimand = \"amce\",   .att_choose = \"att1\",   .lev_choose = \"level3\",   .att_choose_b = \"att1\",   .lev_choose_b = \"level1\" )  amce1 <- projoint(out1, .qoi = qoi_3) print(amce1) ##  ## Projoint results object ## ------------------------- ## Estimand:  amce  ## Structure:  profile_level  ## Standard error method:  analytical  ## IRR:  Estimated  ## Tau:  0.172  ## Number of estimates:  2 summary(amce1) ##  ## Summary of Projoint Estimates ## ------------------------------ ## Estimand: amce ## Structure: profile_level ## Standard error method: analytical ## SE type (lm_robust):   CR2 (clustered by id) ## IRR: Estimated ## Tau: 0.172 ## # A tibble: 2 √ó 9 ##   estimand         estimate     se conf.low conf.high att_level_choose ##   <chr>               <dbl>  <dbl>    <dbl>     <dbl> <chr>            ## 1 amce_uncorrected   -0.130 0.0250   -0.179   -0.0808 att1:level3      ## 2 amce_corrected     -0.198 0.0386   -0.274   -0.122  att1:level3      ## # ‚Ñπ 3 more variables: att_level_notchoose <chr>, ## #   att_level_choose_baseline <chr>, att_level_notchoose_baseline <chr> amce1b <- projoint(out1, .qoi = qoi_3, .irr = 0.75) print(amce1b) ##  ## Projoint results object ## ------------------------- ## Estimand:  amce  ## Structure:  profile_level  ## Standard error method:  analytical  ## IRR:  Assumed (0.75)  ## Tau:  0.146  ## Number of estimates:  2 summary(amce1b) ##  ## Summary of Projoint Estimates ## ------------------------------ ## Estimand: amce ## Structure: profile_level ## Standard error method: analytical ## SE type (lm_robust):   CR2 (clustered by id) ## IRR: Assumed (0.75) ## Tau: 0.146 ## # A tibble: 2 √ó 9 ##   estimand         estimate     se conf.low conf.high att_level_choose ##   <chr>               <dbl>  <dbl>    <dbl>     <dbl> <chr>            ## 1 amce_uncorrected   -0.130 0.0250   -0.179   -0.0808 att1:level3      ## 2 amce_corrected     -0.184 0.0353   -0.253   -0.114  att1:level3      ## # ‚Ñπ 3 more variables: att_level_notchoose <chr>, ## #   att_level_choose_baseline <chr>, att_level_notchoose_baseline <chr>"},{"path":"https://yhoriuchi.github.io/projoint/articles/faq.html","id":"profile-level-mms-and-amces","dir":"Articles","previous_headings":"What if I have profile-level data?","what":"üìà Profile-Level MMs and AMCEs","title":"FAQ Page","text":"Marginal Means  AMCEs","code":"mm   <- projoint(out1_arranged, .structure = \"profile_level\")  amce <- projoint(out1_arranged, .structure = \"profile_level\", .estimand = \"amce\") ## Warning in sqrt(diag(vcov_fit$Vcov_hat)): NaNs produced plot(mm) plot(amce) outcomes <- c(paste0(\"choice\", 1:8), \"choice1_repeated_flipped\")  df <- exampleData1 |> mutate(white = ifelse(race == \"White\", 1, 0))  df_0 <- df |> filter(white == 0) |> reshape_projoint(outcomes) df_1 <- df |> filter(white == 1) |> reshape_projoint(outcomes) df_d <- df |> reshape_projoint(outcomes, .covariates = \"white\")  data_file <- system.file(\"extdata\", \"labels_arranged.csv\", package = \"projoint\") if (data_file == \"\") stop(\"File not found!\")  df_0 <- read_labels(df_0, data_file) df_1 <- read_labels(df_1, data_file) df_d <- read_labels(df_d, data_file)  out_0 <- projoint(df_0, .structure = \"profile_level\") out_1 <- projoint(df_1, .structure = \"profile_level\") out_d <- projoint(df_d, .structure = \"profile_level\", .by_var = \"white\")  plot_0 <- plot(out_0) plot_1 <- plot(out_1) plot_d <- plot(out_d, .by_var = TRUE)  plot_0 +   coord_cartesian(xlim = c(0.2, 0.8)) +   labs(title = \"Non-white\", x = \"AMCE\") +   theme(plot.title = element_text(hjust = 0.5)) +  plot_1 +   coord_cartesian(xlim = c(0.2, 0.8)) +   labs(title = \"White\", x = \"AMCE\") +   theme(axis.text.y = element_blank(), plot.title = element_text(hjust = 0.5)) +  plot_d +   coord_cartesian(xlim = c(-0.4, 0.4)) +   labs(title = \"Difference\", x = \"Difference\") +   theme(axis.text.y = element_blank(), plot.title = element_text(hjust = 0.5))"},{"path":[]},{"path":"https://yhoriuchi.github.io/projoint/articles/faq.html","id":"generate-a-javascript-or-php-randomizer","dir":"Articles","previous_headings":"How did researchers design conjoint surveys previously?","what":"1. Generate a JavaScript or PHP randomizer","title":"FAQ Page","text":"Many researchers use Anton Strezhnev‚Äôs Conjoint Survey Design Tool (Link: conjointSDT) produce JavaScript PHP randomizer.","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/faq.html","id":"javascript","dir":"Articles","previous_headings":"How did researchers design conjoint surveys previously? > 1. Generate a JavaScript or PHP randomizer","what":"JavaScript","title":"FAQ Page","text":"JavaScript randomizer can inserted first screen Qualtrics survey using Edit Question JavaScript. Example screenshot:  Example JavaScript: Download JavaScript runs internally within Qualtrics generates embedded fields conjoint task. example: \"K-1-1-7\" = value 7th attribute, first profile, first task \"K-5-2-5\" = value 5th attribute, second profile, fifth task","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/faq.html","id":"php","dir":"Articles","previous_headings":"How did researchers design conjoint surveys previously? > 1. Generate a JavaScript or PHP randomizer","what":"PHP","title":"FAQ Page","text":"Alternatively, PHP randomizer must hosted externally. Example hosted server:https://www.horiuchi.org/php/ACHR_Modified_2.php (PHP file ) method used :Agadjanian, Carey, Horiuchi, Ryan (2023)","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/faq.html","id":"modify-your-javascript-or-php-randomizer","dir":"Articles","previous_headings":"How did researchers design conjoint surveys previously?","what":"2. Modify your JavaScript or PHP randomizer","title":"FAQ Page","text":"may want add constraints ‚Äî example, prevent ties profiles. , can manually modify JavaScript PHP. future, projoint offer easier ways add constraints! , resources like OpenAI‚Äôs GPT-4 can help edit scripts. Example PHP snippet ensuring racial balance profiles: good examples manual constraints, please email Yusaku Horiuchi!","code":"$treat_profile_one = \"B-\" . (string)$p . \"-1-\" . (string)$treat_number; $treat_profile_two = \"B-\" . (string)$p . \"-2-\" . (string)$treat_number; $cond1 = $returnarray[$treat_profile_one] == \"White\" && $returnarray[$treat_profile_two] == $type; $cond2 = $returnarray[$treat_profile_two] == \"White\" && $returnarray[$treat_profile_one] == $type;  if ($cond1 or $cond2) {   $complete = True; }"},{"path":"https://yhoriuchi.github.io/projoint/articles/faq.html","id":"add-conjoint-tables-with-embedded-fields-in-qualtrics","dir":"Articles","previous_headings":"How did researchers design conjoint surveys previously?","what":"3. Add conjoint tables with embedded fields in Qualtrics","title":"FAQ Page","text":"generating randomizer, must create HTML tables displaying embedded fields task. Example first task:  Example HTML file: task_first.html conjoint study typically includes 5-10 tasks. embedded fields update across tasks: e.g., \"K-1...\" Task 1, \"K-2...\" Task 2, .","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/faq.html","id":"adding-a-repeated-task-recommended","dir":"Articles","previous_headings":"How did researchers design conjoint surveys previously? > 3. Add conjoint tables with embedded fields in Qualtrics","what":"Adding a repeated task (recommended!)","title":"FAQ Page","text":"‚Äôs easy create repeated task intra-respondent reliability (IRR) estimation: Copy HTML Task 1 later survey (e.g., Task 5) Flip Profile 1 Profile 2 (swap embedded field digits) Example repeated task:  Example HTML: task_repeated.html","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/faq.html","id":"sample-qualtrics-survey-template","dir":"Articles","previous_headings":"How did researchers design conjoint surveys previously?","what":"4. Sample Qualtrics survey template","title":"FAQ Page","text":"provide full Qualtrics QSF file ready use!  file recreates standard conjoint survey setup based Mummolo Nall (2017).","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/read.html","id":"read-your-data","dir":"Articles","previous_headings":"","what":"üì• Read Your Data","title":"Read and Wrangle Your Data","text":"can reshape analyze conjoint survey data, first need import R. projoint, use read_Qualtrics() function quickly read properly formatted Qualtrics files.","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/read.html","id":"read-workflow","dir":"Articles","previous_headings":"","what":"üöÄ Read Workflow","title":"Read and Wrangle Your Data","text":"exporting Qualtrics: Click ‚ÄúDownload Data‚Äù. Choose CSV format. Critically, select ‚ÄúUse choice text‚Äù rather coded values. ‚ö° skip selecting ‚ÄúUse choice text,‚Äù conjoint data may fail load properly! , using example bundled projoint:","code":"library(tidyverse) library(projoint) # Example: If your file is located in a \"data\" folder data <- read_Qualtrics(\"data/your_file.csv\") # Inspect the imported data: data ## # A tibble: 518 √ó 218 ##    StartDate           EndDate             Status     Progress ##    <dttm>              <dttm>              <chr>         <dbl> ##  1 2022-03-01 10:44:18 2022-03-01 10:44:43 IP Address      100 ##  2 2022-03-01 10:44:06 2022-03-01 10:47:59 IP Address      100 ##  3 2022-03-01 10:45:30 2022-03-01 10:49:03 IP Address      100 ##  4 2022-03-01 10:52:18 2022-03-01 10:56:29 IP Address      100 ##  5 2022-03-01 10:54:34 2022-03-01 10:57:30 IP Address      100 ##  6 2022-03-01 10:56:51 2022-03-01 10:58:06 IP Address      100 ##  7 2022-03-01 10:58:09 2022-03-01 11:00:45 IP Address      100 ##  8 2022-03-01 11:01:43 2022-03-01 11:01:51 IP Address      100 ##  9 2022-03-01 10:58:35 2022-03-01 11:03:44 IP Address      100 ## 10 2022-03-01 11:00:14 2022-03-01 11:04:37 IP Address      100 ## # ‚Ñπ 508 more rows ## # ‚Ñπ 214 more variables: `Duration (in seconds)` <dbl>, Finished <lgl>, ## #   RecordedDate <dttm>, ResponseId <chr>, DistributionChannel <chr>, ## #   UserLanguage <chr>, Q_RecaptchaScore <dbl>, Q1.2 <chr>, Q2.2 <chr>, ## #   Q2.3 <chr>, Q2.4 <chr>, Q2.5 <chr>, Q2.6 <chr>, Q2.7 <chr>, Q2.8 <chr>, ## #   Q2.9 <chr>, Q3.1 <chr>, Q4.2 <chr>, Q4.3 <chr>, Q4.4 <chr>, Q4.5 <chr>, ## #   Q4.6 <chr>, Q4.7 <chr>, Q4.8 <chr>, Q4.9 <chr>, Q5.1 <chr>, Q6.1 <chr>, ‚Ä¶"},{"path":"https://yhoriuchi.github.io/projoint/articles/read.html","id":"wrangle-your-data","dir":"Articles","previous_headings":"","what":"üõ†Ô∏è Wrangle Your Data","title":"Read and Wrangle Your Data","text":"Preparing data correctly one important steps conjoint analysis. Fortunately, reshape_projoint() function projoint makes easy.","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/read.html","id":"wrangle-workflow","dir":"Articles","previous_headings":"","what":"üöÄ Wrangle Workflow","title":"Read and Wrangle Your Data","text":"Outcome naming & order (important) List .outcomes order questions asked. repeated task, outcome must last element. base tasks (last), function reads digits name task id (e.g., \"choice4\", \"Q4\", \"task04\" ‚Üí task 4). repeated base task inferred first base outcome‚Äôs digits. repeated outcome need contain digits‚Äîposition (last) matters. Outcome strings end choice labels; default parse last character expect \"\"/\"B\". survey uses \"1\"/\"2\" (endings), set .choice_labels accordingly. -Flipped Repeated Task Repeated Task Use .fill = TRUE ‚Äúfill‚Äù missing values based IRR agreement. Compare: Tip: - Use .fill = TRUE small-sample subgroup analysis (helps increase power). - Use .fill = FALSE (default) doubt safer estimates. already clean dataset, use make_projoint_data(): Preview: reorder relabel attributes: Save labels: Edit CSV (change order, label columns; leave level_id untouched) Save ‚Äúlabels_arranged.csv‚Äù something else. Reload labels: Compare using example:   üè† Home: Home","code":"outcomes <- paste0(\"choice\", 1:8) outcomes2 <- c(outcomes, \"choice1_repeated_notflipped\") out2 <- reshape_projoint(   .dataframe = exampleData2,   .outcomes = outcomes2,   .repeated = TRUE,   .flipped = FALSE ) outcomes <- paste0(\"choice\", 1:8) out3 <- reshape_projoint(   .dataframe = exampleData3,   .outcomes = outcomes,   .repeated = FALSE ) fill_FALSE <- reshape_projoint(   .dataframe = exampleData1,   .outcomes = outcomes1,   .fill = FALSE )  fill_TRUE <- reshape_projoint(   .dataframe = exampleData1,   .outcomes = outcomes1,   .fill = TRUE ) selected_vars <- c(\"id\", \"task\", \"profile\", \"selected\", \"selected_repeated\", \"agree\") fill_FALSE$data[selected_vars] ## # A tibble: 6,400 √ó 6 ##    id                 task profile selected selected_repeated agree ##    <chr>             <dbl>   <dbl>    <dbl>             <dbl> <dbl> ##  1 R_00zYHdY1te1Qlrz     1       1        1                 1     1 ##  2 R_00zYHdY1te1Qlrz     1       2        0                 0     1 ##  3 R_00zYHdY1te1Qlrz     2       1        1                NA    NA ##  4 R_00zYHdY1te1Qlrz     2       2        0                NA    NA ##  5 R_00zYHdY1te1Qlrz     3       1        1                NA    NA ##  6 R_00zYHdY1te1Qlrz     3       2        0                NA    NA ##  7 R_00zYHdY1te1Qlrz     4       1        0                NA    NA ##  8 R_00zYHdY1te1Qlrz     4       2        1                NA    NA ##  9 R_00zYHdY1te1Qlrz     5       1        1                NA    NA ## 10 R_00zYHdY1te1Qlrz     5       2        0                NA    NA ## # ‚Ñπ 6,390 more rows fill_TRUE$data[selected_vars] ## # A tibble: 6,400 √ó 6 ##    id                 task profile selected selected_repeated agree ##    <chr>             <dbl>   <dbl>    <dbl>             <dbl> <dbl> ##  1 R_00zYHdY1te1Qlrz     1       1        1                 1     1 ##  2 R_00zYHdY1te1Qlrz     1       2        0                 0     1 ##  3 R_00zYHdY1te1Qlrz     2       1        1                NA     1 ##  4 R_00zYHdY1te1Qlrz     2       2        0                NA     1 ##  5 R_00zYHdY1te1Qlrz     3       1        1                NA     1 ##  6 R_00zYHdY1te1Qlrz     3       2        0                NA     1 ##  7 R_00zYHdY1te1Qlrz     4       1        0                NA     1 ##  8 R_00zYHdY1te1Qlrz     4       2        1                NA     1 ##  9 R_00zYHdY1te1Qlrz     5       1        1                NA     1 ## 10 R_00zYHdY1te1Qlrz     5       2        0                NA     1 ## # ‚Ñπ 6,390 more rows out4 <- make_projoint_data(   .dataframe = exampleData1_labelled_tibble,   .attribute_vars = c(     \"School Quality\", \"Violent Crime Rate (Vs National Rate)\",     \"Racial Composition\", \"Housing Cost\",     \"Presidential Vote (2020)\", \"Total Daily Driving Time for Commuting and Errands\",     \"Type of Place\"   ),   .id_var = \"id\",   .task_var = \"task\",   .profile_var = \"profile\",   .selected_var = \"selected\",   .selected_repeated_var = \"selected_repeated\",   .fill = TRUE ) out4 ## <projoint_data> ## - data:     6400 rows, 13 columns ## - labels:   24 levels, 4 columns save_labels(out1, \"temp/labels_original.csv\") data(out1_arranged, package = \"projoint\") mm <- projoint(out1, .structure = \"profile_level\", .estimand = \"mm\") plot(mm) mm <- projoint(out1_arranged, .structure = \"profile_level\", .estimand = \"mm\") plot(mm)"},{"path":"https://yhoriuchi.github.io/projoint/articles/read.html","id":"example-flipped-repeated-task","dir":"Articles","previous_headings":"üöÄ Wrangle Workflow","what":"Example (Flipped Repeated Task)","title":"Read and Wrangle Your Data","text":"Key Arguments: .outcomes: Outcome columns (include repeated task last) .choice_labels: Profile labels (e.g., ‚Äú‚Äù, ‚ÄúB‚Äù) .idvar: Respondent ID variable .alphabet: Variable prefix (‚ÄúK‚Äù) .repeated, .flipped: repeated task exists flipped","code":"outcomes <- paste0(\"choice\", 1:8) outcomes1 <- c(outcomes, \"choice1_repeated_flipped\")  out1 <- reshape_projoint(   .dataframe = exampleData1,   .outcomes = outcomes1,   .choice_labels = c(\"A\", \"B\"),   .alphabet = \"K\",   .idvar = \"ResponseId\",   .repeated = TRUE,   .flipped = TRUE )"},{"path":"https://yhoriuchi.github.io/projoint/articles/structure.html","id":"why-choice-level-analysis-","dir":"Articles","previous_headings":"","what":"Why Choice-Level Analysis?.","title":"Choice-Level Analysis","text":"traditional conjoint analysis, researchers typically estimate profile-level quantities, treating profile independently ‚Äî approach became standard following influential work Hainmueller, Hopkins, Yamamoto (2014). method rests important assumption: profile independently generated. However, profile-level analysis can systematically miss people actually make decisions. Key Issues: Profile-level quantities like AMCEs, require assumption independently generated profiles disregard context comparison, prevent researchers investigating many questions (implicitly explicitly) assume dependence profiles. Examples choice-level research questions levels (white vs.¬†Asian, Black, Hispanic) always differ profiles. two profiles specifically designed based multiple attributes. sum two percentages 100. One profile always fixed, another varies across tasks. left-leaning (right-leaning) candidate‚Äôs policies (attributes) always positioned consistently left (right). individuals compare two profiles side--side (conjoint tasks), evaluations often psychologically influenced alternative (See Horiuchi Johnson 2025).","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/structure.html","id":"why-move-to-choice-level-analysis","dir":"Articles","previous_headings":"","what":"Why Move to Choice-Level Analysis?","title":"Choice-Level Analysis","text":"Choice-level analysis models decision two profiles, evaluation single profile. people make real-world tradeoffs (e.g., choosing candidates, products, policies) comparative contexts shape judgments (e.g., assimilation, contrast effects) Rather estimating probability selecting standalone profile, choice-level analysis estimates probability choosing one profile another, conditional attributes interest attributes. ‚úÖ Better matches real-world behavior ‚úÖ Explicitly captures comparative decision-making ‚úÖ Reveals true tradeoffs feature prioritization","code":""},{"path":[]},{"path":"https://yhoriuchi.github.io/projoint/articles/structure.html","id":"key-takeaway","dir":"Articles","previous_headings":"","what":"Key Takeaway","title":"Choice-Level Analysis","text":"üîé conjoint design presents two profiles comparison, choice-level analysis essential valid insightful inference. üìà provides deeper insights, accurate estimates, closer reflection actual decision-making.","code":""},{"path":"https://yhoriuchi.github.io/projoint/articles/structure.html","id":"references","dir":"Articles","previous_headings":"","what":"üìö References","title":"Choice-Level Analysis","text":"Clayton, Horiuchi, Kaufman, King, Komisarchik (Forthcoming). ‚ÄúCorrecting Measurement Error Bias Conjoint Survey Experiments.‚ÄùForthcoming, American Journal Political Science.Pre-Print Available Horiuchi Johnson (2025). ‚ÄúAdvancing Conjoint Analysis: Delving Profile Comparisons.‚ÄùWork--progress.","code":""},{"path":"https://yhoriuchi.github.io/projoint/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yusaku Horiuchi. Author, maintainer. Aaron Kaufman. Author. Gary King. Author.","code":""},{"path":"https://yhoriuchi.github.io/projoint/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Katherine Clayton, Yusaku Horiuchi, Aaron R. Kaufman, Gary King, Mayya Komisarchik (2023). Correcting Measurement Error Bias Conjoint Survey Experiments. Working Paper. URL https://gking.harvard.edu/files/gking/files/conerr.pdf Yusaku Horiuchi, Aaron R. Kaufman, Gary King (2023). projoint: One Stop Conjoint Shop. URL https://github.com/yhoriuchi/projoint","code":"@Article{,   title = {Correcting Measurement Error Bias in Conjoint Survey Experiments},   author = {Katherine Clayton and Yusaku Horiuchi and Aaron Kaufman and Gary King and Mayya Komisarchik},   journal = {Working Paper},   year = {2023},   url = {https://gking.harvard.edu/files/gking/files/conerr.pdf}, } @Misc{,   title = {projoint: The One Stop Conjoint Shop},   author = {Yusaku Horiuchi and Aaron Kaufman and Gary King},   year = {2023},   publisher = {GitHub repository},   url = {https://github.com/yhoriuchi/projoint}, }"},{"path":"https://yhoriuchi.github.io/projoint/index.html","id":"id_-tutorials","dir":"","previous_headings":"","what":"üöÄ Tutorials","title":"The One Stop Conjoint Shop","text":"Open R (install R ), run following command coding environment. Online surveys frequently written online software called Qualtrics. Using web tool, called Projoint Survey Designer, don‚Äôt need learn write survey Qualtrics. Use Projoint Survey Designer export surveys formatted Qualtrics. Follow step--step guide learn set Qualtrics survey. Log Qualtrics account. Click ‚ÄúCreate new project‚Äù ‚Äúscratch‚Äù select ‚ÄúSurvey‚Äù ‚ÄúGet started‚Äù Enter name ‚Äúwant start survey‚Äù select ‚ÄúImport QSF file‚Äù Click ‚ÄúChoose file‚Äù select .QSF file. Click ‚ÄúCreate project‚Äù free field Qualtrics survey online vendors. Click ‚ÄúDownload Data‚Äù. Choose CSV format. Critically, select ‚ÄúUse choice text‚Äù rather coded values. Load survey responses R: Prepare data analysis: Follow step--step guide learn read reshape data conjoint analysis. Estimate Marginal Means (MMs) Average Marginal Component Effects (AMCEs) correction measurement error: Note: following example illustrates profile_level analysis. approach common social science useful initial diagnostic, encourage researchers consider choice_level analysis (default .structure). See Choice-Level Analysis. Detailed steps analysis appear Step--Step Guide. Visualize results easily: Estimate additional quantities interest explore subgroup comparisons using choice-level analysis. Estimate correct marginal means (MMs) average marginal component effects (AMCEs), including predicting IRR necessary. Visualize marginal means (MMs) average marginal component effects (AMCEs). Estimate -investigated quantities interest compare subgroups using choice-level analysis.","code":"devtools::install_github(\"yhoriuchi/projoint\") library(projoint) dat <- read_Qualtrics(\"your_file.csv\") dat <- reshape_projoint(   .dataframe = dat,   .outcomes = c(paste0(\"choice\", 1:8), \"choice1_repeated_flipped\") ) output <- projoint(out1_arranged, .structure = \"profile_level\") print(output) summary(output) plot(output)"},{"path":"https://yhoriuchi.github.io/projoint/index.html","id":"id_-upcoming-features","dir":"","previous_headings":"","what":"üì¶ Upcoming Features","title":"The One Stop Conjoint Shop","text":"Weighted estimation features respondents Support non-binary outcomes (ratings, rankings) ‚ú® Thank using projoint! ‚ú®","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1.html","id":null,"dir":"Reference","previous_headings":"","what":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task ‚Äî exampleData1","title":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task ‚Äî exampleData1","text":"cleaned Qualtrics output conjoint study compares two potential new building developments. 8 standard tasks well repeat first task, used calculate response instability.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task ‚Äî exampleData1","text":"","code":"data(exampleData1)"},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Projoint Example Data Set 1: Building Conjoint with a Repeated, Flipped Task ‚Äî exampleData1","text":"data frame 400 rows 185 columns: Contains survey responses including demographic information, outcome choices, conjoint attribute values identified K-*-* variable names.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1_labelled_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Projoint Example Data Set 1: ","title":"Projoint Example Data Set 1: ","text":"already cleaned data frame (tibble) attribute corresponds separate column proper attribute name. unit observation two profiles task respondent.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1_labelled_tibble.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Projoint Example Data Set 1: ","text":"data frame 6,400 rows 14 columns: Contains survey responses including demographic information, outcome choices, conjoint attribute values identified K-*-* variable names.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData1_labelled_tibble.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Projoint Example Data Set 1: ","text":"Qualtrics survey Prolific; see Clayton et al. replication materials.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData2.html","id":null,"dir":"Reference","previous_headings":"","what":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Non-Flipped Task ‚Äî exampleData2","title":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Non-Flipped Task ‚Äî exampleData2","text":"cleaned Qualtrics output conjoint study compares two potential new building developments. 8 standard tasks well repeat first task, profiles shown left-right positions (flipped).","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Non-Flipped Task ‚Äî exampleData2","text":"","code":"data(exampleData2)"},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Projoint Example Data Set 2: Building Conjoint with a Repeated, Non-Flipped Task ‚Äî exampleData2","text":"data frame 400 rows 185 columns: Contains survey responses including demographic information, outcome choices, conjoint attribute values identified K-*-* variable names.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData3.html","id":null,"dir":"Reference","previous_headings":"","what":"Projoint Example Data Set 3: Building Conjoint with No Repeated Task ‚Äî exampleData3","title":"Projoint Example Data Set 3: Building Conjoint with No Repeated Task ‚Äî exampleData3","text":"cleaned Qualtrics output conjoint study compares two potential new building developments. 8 standard tasks; repeated tasks included.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projoint Example Data Set 3: Building Conjoint with No Repeated Task ‚Äî exampleData3","text":"","code":"data(exampleData3)"},{"path":"https://yhoriuchi.github.io/projoint/reference/exampleData3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Projoint Example Data Set 3: Building Conjoint with No Repeated Task ‚Äî exampleData3","text":"data frame 400 rows 184 columns: Contains survey responses including demographic information, outcome choices, conjoint attribute values identified K-*-* variable names.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/make_projoint_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a projoint_data object using a labelled tibble (data frame) ‚Äî make_projoint_data","title":"Make a projoint_data object using a labelled tibble (data frame) ‚Äî make_projoint_data","text":"function converts labelled tibble (data frame) \"projoint_data\" class object necessary projoint.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/make_projoint_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a projoint_data object using a labelled tibble (data frame) ‚Äî make_projoint_data","text":"","code":"make_projoint_data(   .dataframe,   .attribute_vars,   .id_var = \"id\",   .task_var = \"task\",   .profile_var = \"profile\",   .selected_var = \"selected\",   .selected_repeated_var = NULL,   .fill = FALSE )"},{"path":"https://yhoriuchi.github.io/projoint/reference/make_projoint_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a projoint_data object using a labelled tibble (data frame) ‚Äî make_projoint_data","text":".dataframe data frame. unit observation must two profiles task respondent. .attribute_vars character vector identifying names attributes .id_var character identifying name column containing respondent IDs (default: \"id\") .task_var character identifying name column containing task numbers (default: \"task\") .profile_var character identifying name column containing profile numbers IDs (default: \"profile\") .selected_var character identifying name column containing dichotomous response ({0, 1}) task (default: \"selected\") .selected_repeated_var character identifying name column containing dichotomous response ({0, 1}) repeated task (default: NULL) .fill logical vector: TRUE want use information whether respondent chose profile repeated task \"fill\" (using `tidyr` package) missing values non-repeated tasks, FALSE (otherwise). number respondents small, number specific profile pairs interest small, /number specific respondent subgroups want study small, worth changing option TRUE. please note `.fill = TRUE` based assumption IRR independent information contained conjoint tables. Although empirical tests suggest validity assumption, unsure , better use default value (FALSE).","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/make_projoint_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a projoint_data object using a labelled tibble (data frame) ‚Äî make_projoint_data","text":"projoint object class projoint_data ready pass projoint.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/organize_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Organize Data for Estimation ‚Äî organize_data","title":"Organize Data for Estimation ‚Äî organize_data","text":"Internal helper function organize data marginal mean (MM) average marginal component effect (AMCE) estimation. Called inside pj_estimate().","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/organize_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organize Data for Estimation ‚Äî organize_data","text":"","code":"organize_data(   .dataframe,   .structure,   .estimand,   .remove_ties,   .att_choose,   .lev_choose,   .att_notchoose,   .lev_notchoose )"},{"path":"https://yhoriuchi.github.io/projoint/reference/organize_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organize Data for Estimation ‚Äî organize_data","text":".dataframe reshaped conjoint dataset (reshape_projoint()). .structure Either \"profile_level\" \"choice_level\". .estimand Either \"mm\" \"amce\". .remove_ties Logical. Whether remove tied responses (default = TRUE). .att_choose Attribute ID chosen profile. .lev_choose Level ID chosen profile. .att_notchoose (Optional) Attribute ID non-chosen profile (choice-level analysis). .lev_notchoose (Optional) Level ID non-chosen profile (choice-level analysis).","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/organize_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Organize Data for Estimation ‚Äî organize_data","text":"list two tibbles: data_for_estimand data_for_irr.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/out1_arranged.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Output: Manually Rearranged Labels ‚Äî out1_arranged","title":"Example Output: Manually Rearranged Labels ‚Äî out1_arranged","text":"example projoint_data object labels manually rearranged.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/out1_arranged.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Output: Manually Rearranged Labels ‚Äî out1_arranged","text":"projoint_data object.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Estimation Function ‚Äî pj_estimate","title":"Internal Estimation Function ‚Äî pj_estimate","text":"Core workhorse computing marginal means (MMs) AMCEs conjoint design, optional intra-respondent reliability (IRR) correction.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Estimation Function ‚Äî pj_estimate","text":"","code":"pj_estimate(   .data,   .structure,   .estimand,   .att_choose,   .lev_choose,   .att_notchoose,   .lev_notchoose,   .att_choose_b,   .lev_choose_b,   .att_notchoose_b,   .lev_notchoose_b,   .se_method,   .irr,   .remove_ties,   .ignore_position,   .n_sims,   .n_boot,   .weights_1,   .clusters_1,   .se_type_1,   .weights_2,   .clusters_2,   .se_type_2,   .auto_cluster = TRUE )"},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal Estimation Function ‚Äî pj_estimate","text":".data projoint_data object created reshape_projoint make_projoint_data. .structure Either \"profile_level\" \"choice_level\". .estimand Either \"mm\" (marginal mean) \"amce\" (average marginal component effect). .att_choose Attribute chosen profile/feature. .lev_choose Level(s) chosen profile/feature. Length 1 profile_level; may 1+ choice_level. .att_notchoose Attribute -chosen profile/feature (required choice_level). .lev_notchoose Level(s) -chosen profile/feature (required choice_level). .att_choose_b (AMCE ) Baseline attribute comparison. .lev_choose_b (AMCE ) Baseline level(s) comparison. .att_notchoose_b (AMCE , choice-level ) Baseline attribute -chosen profile. .lev_notchoose_b (AMCE , choice-level ) Baseline level(s) -chosen profile. .se_method One \"analytical\", \"simulation\", \"bootstrap\". .irr NULL (default) estimate IRR repeated tasks; otherwise numeric IRR value. .remove_ties Logical; ties removed estimation? Defaults TRUE. .ignore_position Logical; choice_level. TRUE (default), ignore profile position (left/right). .n_sims Integer; required .se_method == \"simulation\". .n_boot Integer; required .se_method == \"bootstrap\". .weights_1 (Optional) Bare (unquoted) column weights IRR estimation; passed lm_robust. .clusters_1 (Optional) Bare (unquoted) column clusters IRR estimation; passed lm_robust. .se_type_1 SE type IRR estimation; passed lm_robust. NULL, estimatr defaults used (HC2 unclustered; CR2 clustered). .weights_2 (Optional) Bare (unquoted) column weights MM/AMCE estimation; passed lm_robust. .clusters_2 (Optional) Bare (unquoted) column clusters MM/AMCE estimation; passed lm_robust. .se_type_2 SE type MM/AMCE estimation; passed lm_robust. NULL, estimatr defaults used (HC2 unclustered; CR2 clustered). .auto_cluster Logical; TRUE (default), auto-cluster id present .clusters_* supplied; auto-clustering occurs corresponding .se_type_* NULL. See projoint.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/pj_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal Estimation Function ‚Äî pj_estimate","text":"data frame columns estimand, estimate, se, conf.low, conf.high, tau,   ready downstream aggregation plotting.","code":""},{"path":[]},{"path":"https://yhoriuchi.github.io/projoint/reference/plot.projoint_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Marginal Means (MMs) or AMCEs from projoint Results ‚Äî plot.projoint_results","title":"Plot Marginal Means (MMs) or AMCEs from projoint Results ‚Äî plot.projoint_results","text":"function creates publication-ready plots based output `projoint()`. supports profile-level choice-level analyses, tailored plotting options.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot.projoint_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Marginal Means (MMs) or AMCEs from projoint Results ‚Äî plot.projoint_results","text":"","code":"# S3 method for class 'projoint_results' plot(   x,   .estimates = \"corrected\",   .by_var = FALSE,   .labels = NULL,   .base_size = 12,   .base_family = \"\",   .type = c(\"bar\", \"pointrange\"),   .show_attribute = TRUE,   .remove_xaxis = FALSE,   .xlim = c(0, 1),   .plot.margin = c(0, 3, 0, 3),   ... )"},{"path":"https://yhoriuchi.github.io/projoint/reference/plot.projoint_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Marginal Means (MMs) or AMCEs from projoint Results ‚Äî plot.projoint_results","text":"x `projoint_results` object, typically created `projoint()`. .estimates Character. estimates plot: `\"corrected\"` (default), `\"uncorrected\"`, `\"\"`. .by_var Logical. (Profile-level ) Whether plot subgroup differences. Default `FALSE`. .labels Character vector. (Choice-level ) Custom x-axis labels bar point-range plots. .base_size Numeric. Base font size plot text. Default 12. .base_family Character. Base font family plot text. Default \"\" (system default). .type Character. (Choice-level ) Type plot: `\"bar\"` (default) `\"pointrange\"`. .show_attribute Logical. (Choice-level ) Whether display attribute name plot title. Default `FALSE`. .remove_xaxis Logical. (Choice-level ) Whether remove x-axis labels ticks. Default `FALSE`. .xlim Numeric vector length 2. (Choice-level ) X-axis limits. Default `c(0, 1)`. .plot.margin Numeric vector length 4. (Choice-level ) Margins around plot centimeters. Default `c(0, 3, 0, 3)`. ... Additional arguments passed underlying plotting functions.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot.projoint_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Marginal Means (MMs) or AMCEs from projoint Results ‚Äî plot.projoint_results","text":"`ggplot2` object.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot.projoint_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Marginal Means (MMs) or AMCEs from projoint Results ‚Äî plot.projoint_results","text":"**profile-level results**, `.by_var`, `.base_size`, `.base_family` relevant. **choice-level results**, `.type`, `.labels`, `.show_attribute`, `.xtitle`, `.remove_xaxis`, `.xlim`, `.hjust_left`, `.hjust_right`, `.title_size`, `.plot.margin` relevant. irrelevant arguments provided given structure, warning issued arguments ignored.","code":""},{"path":[]},{"path":"https://yhoriuchi.github.io/projoint/reference/plot.projoint_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the results of the extrapolation method for estimating tau. ‚Äî plot.projoint_tau","title":"Visualize the results of the extrapolation method for estimating tau. ‚Äî plot.projoint_tau","text":"Visualize results extrapolation method estimating tau.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot.projoint_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the results of the extrapolation method for estimating tau. ‚Äî plot.projoint_tau","text":"","code":"# S3 method for class 'projoint_tau' plot(x, ...)"},{"path":"https://yhoriuchi.github.io/projoint/reference/plot.projoint_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the results of the extrapolation method for estimating tau. ‚Äî plot.projoint_tau","text":"x object class projoint_tau derived predict_tau ... Optional arguments; currently none accepted","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint_choice_level_mm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Choice-Level Marginal Means (MMs) ‚Äî plot_projoint_choice_level_mm","title":"Plot Choice-Level Marginal Means (MMs) ‚Äî plot_projoint_choice_level_mm","text":"function produces plot choice-level marginal means (MMs) given projoint_results object, output projoint function. supports two types visualizations: bar plot pointrange plot.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint_choice_level_mm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Choice-Level Marginal Means (MMs) ‚Äî plot_projoint_choice_level_mm","text":"","code":"plot_projoint_choice_level_mm(   x,   .type = \"pointrange\",   .estimates = \"corrected\",   .labels = NULL,   .show_attribute = TRUE,   .remove_xaxis = FALSE,   .xlim = c(0, 1),   .plot.margin = c(top = 1, left = 2, bottom = 1, right = 2),   ... )"},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint_choice_level_mm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Choice-Level Marginal Means (MMs) ‚Äî plot_projoint_choice_level_mm","text":"x projoint_results object. output projoint() function. .type Type plot produce. Either \"bar\" (default) bar plots \"pointrange\" horizontal point-range plot. .estimates estimates plot. Options \"corrected\" (default) \"uncorrected\". .labels character vector specifying custom labels x-axis (optional). NULL (default), labels automatically generated data. .show_attribute Logical; TRUE (default), display attribute name plot title. .remove_xaxis Logical; TRUE, remove x-axis elements (ticks, labels, line). Default FALSE. .xlim numeric vector specifying x-axis limits (default c(0, 1)). .plot.margin numeric vector specifying plot margins centimeters, ordered c(top, left, bottom, right). Default c(1, 2, 1, 2). NULL, margins automatically set based label lengths. ... Additional arguments (currently unused).","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint_choice_level_mm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Choice-Level Marginal Means (MMs) ‚Äî plot_projoint_choice_level_mm","text":"ggplot2 object.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint_choice_level_mm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Choice-Level Marginal Means (MMs) ‚Äî plot_projoint_choice_level_mm","text":".type = \"pointrange\", two attribute levels automatically positioned slightly outside [0,1] x-axis range avoid overlap confidence intervals. .labels supplied, function attempts extract level labels input object. two levels compared belong different attributes, warning message shown title added.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint_profile_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot all ","title":"Plot all ","text":"method produces profile-level MM AMCE plots given projoint_results object, output projoint function. structure must profile-level use function.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint_profile_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot all ","text":"","code":"plot_projoint_profile_level(   x,   .estimates = \"corrected\",   .by_var = FALSE,   .base_size = 12,   .base_family = \"\",   ... )"},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint_profile_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot all ","text":"x projoint_results object .estimates estimates plotted, either \"corrected\" (default), \"uncorrected\", \"\" .by_var TRUE plot difference estimates two subgroups, FALSE (default) otherwise .base_size base font size, given pts. .base_family base font family ... Additional optional arguments","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/plot_projoint_profile_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot all ","text":"ggplot object","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate tau when there is no repeated task. ‚Äî predict_tau","title":"Estimate tau when there is no repeated task. ‚Äî predict_tau","text":"Given output projoint_data, function uses extrapolation method produce estimate intra-coder reliability (IRR).","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate tau when there is no repeated task. ‚Äî predict_tau","text":"","code":"predict_tau(.data, .title = NULL)"},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate tau when there is no repeated task. ‚Äî predict_tau","text":".data projoint_data object, outputted reshape_projoint .title title figure","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/predict_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate tau when there is no repeated task. ‚Äî predict_tau","text":"projoint_tau object containing estimate tau figure visualizing extrapolation method.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/print.projoint_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a projoint_data object ‚Äî print.projoint_data","title":"Print a projoint_data object ‚Äî print.projoint_data","text":"Custom print method objects class `projoint_data`.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/print.projoint_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a projoint_data object ‚Äî print.projoint_data","text":"","code":"# S3 method for class 'projoint_data' print(x, ...)"},{"path":"https://yhoriuchi.github.io/projoint/reference/print.projoint_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a projoint_data object ‚Äî print.projoint_data","text":"x `projoint_data` object. ... Additional arguments (currently unused).","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/print.projoint_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for projoint_results ‚Äî print.projoint_results","title":"Print method for projoint_results ‚Äî print.projoint_results","text":"Print method projoint_results","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/print.projoint_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for projoint_results ‚Äî print.projoint_results","text":"","code":"# S3 method for class 'projoint_results' print(x, ...)"},{"path":"https://yhoriuchi.github.io/projoint/reference/print.projoint_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for projoint_results ‚Äî print.projoint_results","text":"x object class projoint_results ... Additional arguments (ignored)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/print.projoint_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for projoint_tau objects ‚Äî print.projoint_tau","title":"Print method for projoint_tau objects ‚Äî print.projoint_tau","text":"Print method projoint_tau objects","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/print.projoint_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for projoint_tau objects ‚Äî print.projoint_tau","text":"","code":"# S3 method for class 'projoint_tau' print(x, ...)"},{"path":"https://yhoriuchi.github.io/projoint/reference/print.projoint_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for projoint_tau objects ‚Äî print.projoint_tau","text":"x object class projoint_tau predict_tau ... Additional arguments (currently unused)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze a Conjoint Data Set with Measurement Error Correction ‚Äî projoint","title":"Analyze a Conjoint Data Set with Measurement Error Correction ‚Äî projoint","text":"Computes marginal means (MMs) average marginal component effects (AMCEs) correction intra-respondent reliability (IRR), using repeated tasks available. Returns estimates ready plotting.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze a Conjoint Data Set with Measurement Error Correction ‚Äî projoint","text":"","code":"projoint(   .data,   .qoi = NULL,   .by_var = NULL,   .structure = \"choice_level\",   .estimand = \"mm\",   .se_method = \"analytical\",   .irr = NULL,   .remove_ties = TRUE,   .ignore_position = NULL,   .n_sims = NULL,   .n_boot = NULL,   .weights_1 = NULL,   .clusters_1 = NULL,   .se_type_1 = NULL,   .weights_2 = NULL,   .clusters_2 = NULL,   .se_type_2 = NULL,   .auto_cluster = TRUE )"},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze a Conjoint Data Set with Measurement Error Correction ‚Äî projoint","text":".data projoint_data created reshape_projoint make_projoint_data. .qoi Optional projoint_qoi specifying custom quantities interest. supplied, structure estimand override .structure .estimand. .by_var Optional column name (character) subgroup analysis; must logical (TRUE/FALSE) numeric/integer coded 0/1. supported .structure = \"profile_level\" (ignored choice-level). .structure Either \"profile_level\" \"choice_level\" (default \"choice_level\"). .qoi supplied, overridden .qoi$structure. .estimand Either \"mm\" (marginal mean) \"amce\" (average marginal component effect); default \"mm\". .qoi supplied, overridden .qoi$estimand. .se_method Standard-error method: \"analytical\" (default), \"simulation\", \"bootstrap\". .irr Numeric NULL (default). NULL, IRR estimated repeated tasks; otherwise IRR fixed supplied value. .remove_ties Logical; remove ties choice data estimation? Default TRUE. .ignore_position Logical; choice-level . Ignore profile position (left/right)? Default TRUE. .n_sims Integer; required .se_method = \"simulation\". .n_boot Integer; required .se_method = \"bootstrap\". .weights_1, .clusters_1, .se_type_1 Arguments passed lm_robust IRR estimation. .se_type_1 NULL, estimatr defaults used (HC2 unclustered; CR2 clustered). .weights_2, .clusters_2, .se_type_2 Arguments passed lm_robust MM/AMCE estimation. .se_type_2 NULL, estimatr defaults used (HC2 unclustered; CR2 clustered). .auto_cluster Logical. TRUE (default), automatically cluster id column present .clusters_* supplied. Auto-clustering occurs corresponding .se_type_* NULL.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze a Conjoint Data Set with Measurement Error Correction ‚Äî projoint","text":"projoint_results object estimates metadata, ready plotting analysis.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze a Conjoint Data Set with Measurement Error Correction ‚Äî projoint","text":"users provide projoint_data object. Advanced users may target custom quantities projoint_qoi. Valid se_type_* values depend whether clustering used: Without clusters: \"classical\", \"HC0\", \"HC1\", \"HC2\", \"HC3\" clusters: \"CR0\", \"CR1\", \"CR2\", \"stata\", \"none\" NULL, estimatr defaults used (HC2 unclustered; CR2 clustered).","code":""},{"path":[]},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a projoint_data Object ‚Äî projoint_data","title":"Create a projoint_data Object ‚Äî projoint_data","text":"function creates projoint_data S3 object containing conjoint survey labels response data. used internally reshape_projoint make_projoint_data.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a projoint_data Object ‚Äî projoint_data","text":"","code":"projoint_data(labels, data)"},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a projoint_data Object ‚Äî projoint_data","text":"labels data frame conjoint attribute level labels, attribute level IDs. data data frame containing reshaped conjoint survey responses.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a projoint_data Object ‚Äî projoint_data","text":"object class projoint_data.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Differences Across Subgroups ‚Äî projoint_diff","title":"Estimate Differences Across Subgroups ‚Äî projoint_diff","text":"Internal function called projoint compute subgroup differences (group == 1 minus group == 0) marginal means (MMs) average marginal component effects (AMCEs). supported .structure = \"profile_level\".","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Differences Across Subgroups ‚Äî projoint_diff","text":"","code":"projoint_diff(   .data,   .qoi,   .by_var,   .structure,   .estimand,   .se_method,   .irr,   .remove_ties,   .ignore_position,   .n_sims,   .n_boot,   .weights_1,   .clusters_1,   .se_type_1,   .weights_2,   .clusters_2,   .se_type_2,   .auto_cluster = TRUE )"},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Differences Across Subgroups ‚Äî projoint_diff","text":".data projoint_data object. .qoi Optional projoint_qoi; NULL, produces MMs/AMCEs. .by_var Subgrouping variable .data$data; must logical (TRUE/FALSE), numeric/integer coded 0/1, factor levels \"0\"/\"1\". .structure Must \"profile_level\" subgroup analysis. .estimand Either \"mm\" \"amce\". .se_method One \"analytical\", \"simulation\", \"bootstrap\". .irr NULL estimate IRR repeated tasks, numeric fix IRR. .remove_ties Logical; remove ties choice data estimation? Default TRUE. .ignore_position Ignored (subgroup analysis profile-level ). .n_sims Integer; required .se_method = \"simulation\". .n_boot Integer; required .se_method = \"bootstrap\". .weights_1, .clusters_1, .se_type_1 Passed lm_robust IRR estimation. .se_type_1 NULL, estimatr defaults used (HC2 unclustered; CR2 clustered). See projoint valid se_type_* values. .weights_2, .clusters_2, .se_type_2 Passed lm_robust MM/AMCE estimation. .se_type_2 NULL, estimatr defaults used (HC2 unclustered; CR2 clustered). See projoint valid se_type_* values. .auto_cluster Logical. TRUE (default), automatically cluster id column present .clusters_* supplied. Auto-clustering occurs corresponding .se_type_* NULL. See projoint.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Differences Across Subgroups ‚Äî projoint_diff","text":"projoint_results object subgroup differences.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Profile- or Choice-Level Effects ‚Äî projoint_level","title":"Estimate Profile- or Choice-Level Effects ‚Äî projoint_level","text":"Internal function called projoint compute marginal means (MMs) average marginal component effects (AMCEs) chosen structure.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Profile- or Choice-Level Effects ‚Äî projoint_level","text":"","code":"projoint_level(   .data,   .qoi,   .structure,   .estimand,   .se_method,   .irr,   .remove_ties,   .ignore_position,   .n_sims,   .n_boot,   .weights_1,   .clusters_1,   .se_type_1,   .weights_2,   .clusters_2,   .se_type_2,   .auto_cluster = TRUE )"},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Profile- or Choice-Level Effects ‚Äî projoint_level","text":".data projoint_data object. .qoi Optional projoint_qoi; NULL, produces MMs/AMCEs. .structure Either \"profile_level\" \"choice_level\". .estimand Either \"mm\" (marginal mean) \"amce\" (average marginal component effect). .se_method One \"analytical\", \"simulation\", \"bootstrap\". .irr NULL estimate IRR repeated tasks, numeric fix IRR. .remove_ties Logical; remove ties choice data estimation? Default TRUE. .ignore_position Logical; choice-level . Ignore profile position (left/right)? Default TRUE. .n_sims Integer; required .se_method = \"simulation\". .n_boot Integer; required .se_method = \"bootstrap\". .weights_1, .clusters_1, .se_type_1 Passed lm_robust IRR estimation. .se_type_1 NULL, estimatr defaults used (HC2 unclustered; CR2 clustered). See projoint valid se_type_* values. .weights_2, .clusters_2, .se_type_2 Passed lm_robust MM/AMCE estimation. .se_type_2 NULL, estimatr defaults used (HC2 unclustered; CR2 clustered). See projoint valid se_type_* values. .auto_cluster Logical. TRUE (default), automatically cluster id column present .clusters_* supplied. Auto-clustering occurs corresponding .se_type_* NULL. See projoint.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Profile- or Choice-Level Effects ‚Äî projoint_level","text":"projoint_results object (typically returned via projoint).","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_qoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a projoint_qoi Object ‚Äî projoint_qoi","title":"Create a projoint_qoi Object ‚Äî projoint_qoi","text":"function creates projoint_qoi S3 object, specifying quantities interest (QOI) custom estimations. typically generated set_qoi function.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_qoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a projoint_qoi Object ‚Äî projoint_qoi","text":"","code":"projoint_qoi(...)"},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_qoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a projoint_qoi Object ‚Äî projoint_qoi","text":"... Named arguments specifying attributes levels interest conjoint estimation.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_qoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a projoint_qoi Object ‚Äî projoint_qoi","text":"object class projoint_qoi.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a projoint_results Object ‚Äî projoint_results","title":"Create a projoint_results Object ‚Äî projoint_results","text":"function creates projoint_results S3 object containing estimation results metadata. used internally projoint.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a projoint_results Object ‚Äî projoint_results","text":"","code":"projoint_results(...)"},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a projoint_results Object ‚Äî projoint_results","text":"... Named elements including estimates, labels, structure, estimand, irr, tau, settings.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a projoint_results Object ‚Äî projoint_results","text":"object class projoint_results.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a projoint_tau Object ‚Äî projoint_tau","title":"Create a projoint_tau Object ‚Äî projoint_tau","text":"function creates projoint_tau S3 object containing estimated reliability (tau) associated diagnostic plot.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a projoint_tau Object ‚Äî projoint_tau","text":"","code":"projoint_tau(irr, figure)"},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a projoint_tau Object ‚Äî projoint_tau","text":"irr tibble containing extrapolated IRR predictions. figure ggplot2 object showing extrapolation plot.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/projoint_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a projoint_tau Object ‚Äî projoint_tau","text":"object class projoint_tau.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and re-format a Qualtrics csv (choice text) ‚Äî read_Qualtrics","title":"Read and re-format a Qualtrics csv (choice text) ‚Äî read_Qualtrics","text":"Read re-format Qualtrics csv (choice text)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and re-format a Qualtrics csv (choice text) ‚Äî read_Qualtrics","text":"","code":"read_Qualtrics(.file)"},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and re-format a Qualtrics csv (choice text) ‚Äî read_Qualtrics","text":".file file name corresponding csv downloaded Qualtrics.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_Qualtrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and re-format a Qualtrics csv (choice text) ‚Äî read_Qualtrics","text":"data frame suitable reshape_projoint","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads in a CSV of reordered attributes and levels, and applies it to a projoint_data object. ‚Äî read_labels","title":"Reads in a CSV of reordered attributes and levels, and applies it to a projoint_data object. ‚Äî read_labels","text":"users interested reordering attributes levels conjoint data set. First save existing order CSV using save_labels, manually reorder CSV. Finally, use function read modified CSV automatically apply new order existing projoint_data.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads in a CSV of reordered attributes and levels, and applies it to a projoint_data object. ‚Äî read_labels","text":"","code":"read_labels(.data, .filename)"},{"path":"https://yhoriuchi.github.io/projoint/reference/read_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads in a CSV of reordered attributes and levels, and applies it to a projoint_data object. ‚Äî read_labels","text":".data projoint_data object .filename name revised CSV file, originally derived save_labels, manual arrangement","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/read_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads in a CSV of reordered attributes and levels, and applies it to a projoint_data object. ‚Äî read_labels","text":"projoint object class projoint_data ready pass projoint.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_projoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshapes survey response data for conjoint analysis (single task set) ‚Äî reshape_projoint","title":"Reshapes survey response data for conjoint analysis (single task set) ‚Äî reshape_projoint","text":"function takes wide survey data frame (e.g., read_Qualtrics) reshapes row corresponds single respondent‚Äìtask‚Äìprofile. supports arbitrary ordering base tasks asked respondents single repeated task per respondent. repeated base task inferred first base outcome .outcomes, repeated outcome must last element .outcomes.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_projoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshapes survey response data for conjoint analysis (single task set) ‚Äî reshape_projoint","text":"","code":"reshape_projoint(   .dataframe,   .outcomes,   .choice_labels = c(\"A\", \"B\"),   .alphabet = \"K\",   .idvar = \"ResponseId\",   .repeated = TRUE,   .flipped = TRUE,   .covariates = NULL,   .fill = FALSE )"},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_projoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshapes survey response data for conjoint analysis (single task set) ‚Äî reshape_projoint","text":".dataframe data frame, preferably read_Qualtrics. .outcomes Character vector outcome column names **asked order**. repeated task used, outcome must **last element**. .choice_labels Character vector (default c(\"\",\"B\")) giving two labels appear end outcome strings (e.g., \"Candidate \", \"Candidate B\"). .alphabet Single character (default \"K\") indicating Qualtrics prefix used conjoint tables. .idvar Character (default \"ResponseId\") indicating respondent id column. .repeated Logical (default TRUE) indicating whether repeated task present. .flipped Logical (default TRUE) indicating whether repeated task flips profiles (1 <-> 2) agreement computed. .covariates Optional character vector respondent-level covariate column names carry . .fill Logical (default FALSE). TRUE, fills agree within respondent across tasks described \"Filling agreement\".","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_projoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshapes survey response data for conjoint analysis (single task set) ‚Äî reshape_projoint","text":"projoint_data object elements $labels $data; see Details.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_projoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reshapes survey response data for conjoint analysis (single task set) ‚Äî reshape_projoint","text":"**Scope assumptions** * One set conjoint tasks exactly two profiles per task (profiles 1 2). * multi-set designs, call reshape_projoint() per set bind results. **Expected input (Qualtrics K-codes)** * Wide columns named K-<task>-<attribute> (attribute names)   K-<task>-<profile>-<attribute> (level names), <task> 1..n <profile> 1 2. * Rows missing K-1-1 dropped empty tables (server hiccup safeguard). **Outcome columns (.outcomes)** * List choice variables **order asked**. include repeated task, outcome column must **last element**. * base tasks (last element), function extracts base task id reading **digits** outcome name   (e.g., \"choice4\", \"Q4\", \"task04\" -> task 4). * set base task ids extracted .outcomes must **exactly match** set task ids present K-codes; otherwise error thrown. * **repeated base task** inferred **digits first base outcome** (.e., first element .outcomes, excluding final repeated outcome). * repeated outcome‚Äôs name **** need contain digits; **position** (last) matters. **Choice parsing** * selected profile parsed **last character** outcome string matched .choice_labels.   Ensure outcomes end labels (e.g., \"Candidate \"/\"Candidate B\"). outcomes numeric differently formatted, pre-process   adjust .choice_labels accordingly. **Output** * Returns projoint_data object : $labels: data frame mapping human-readable attribute/level stable ids attribute_id = \"att1\",\"att2\",...           level_id = \"attX:levelY\". $data: tibble one row per id‚Äìtask‚Äìprofile, attribute columns (named att*) storing level_id,           selected (1 profile chosen within task, 0 otherwise), agree (1/0/NA repeated-task agreement flip logic),           columns specified .covariates. id coerced character; attribute columns factors. **Filling agreement** * .fill = TRUE, agree forward/backward filled **within respondent** task order, propagating observed repeated-task agreement   tasks respondent. relies assumption IRR respondent-specific independent table content. **Recommendation** * Leave .fill = FALSE default. Consider .fill = TRUE sample size subgroup sparsity makes single repeated-task observation   per respondent inadequate, willing assume intra-respondent reliability (IRR) respondent-specific independent conjoint   table contents. using .fill = TRUE, always compute standard errors clustered respondent level, report sensitivity check comparing   results .fill = FALSE. **Common diagnostics** * reshaping, dplyr::count(reshaped$data, task, profile) show exactly two rows per task (profiles 1 2). * pj_estimate() later reports \"rows match specified attribute/level\", construct QOIs reshaped$labels (use exact attX:levelY ids).","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/reshape_projoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshapes survey response data for conjoint analysis (single task set) ‚Äî reshape_projoint","text":"","code":"library(projoint) data(\"exampleData1\")  # Example 1: Base tasks asked in numeric order, repeated = task 1 outcomes <- c(paste0(\"choice\", 1:8), \"choice1_repeated_flipped\") reshaped <- reshape_projoint(exampleData1, outcomes) dplyr::count(reshaped$data, task, profile)  # should be 2 per task #> # A tibble: 16 √ó 3 #>     task profile     n #>    <dbl>   <dbl> <int> #>  1     1       1   400 #>  2     1       2   400 #>  3     2       1   400 #>  4     2       2   400 #>  5     3       1   400 #>  6     3       2   400 #>  7     4       1   400 #>  8     4       2   400 #>  9     5       1   400 #> 10     5       2   400 #> 11     6       1   400 #> 12     6       2   400 #> 13     7       1   400 #> 14     7       2   400 #> 15     8       1   400 #> 16     8       2   400  # Example 2: Arbitrary task order (e.g., respondents saw tasks {2,1,3,4,5}); repeated is last # The repeated base task is inferred from the FIRST base outcome (\"Q2\" -> task 2). # outcomes2 <- c(\"Q2\",\"Q1\",\"Q3\",\"Q4\",\"Q5\",\"Q2_repeat\") # reshaped2 <- reshape_projoint(exampleData1, outcomes2, .flipped = TRUE)"},{"path":"https://yhoriuchi.github.io/projoint/reference/save_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the attributes and levels, and their order, from a conjoint data set, to a CSV file. ‚Äî save_labels","title":"Save the attributes and levels, and their order, from a conjoint data set, to a CSV file. ‚Äî save_labels","text":"function saves labels attributes levels, generated reshape_projoint, CSV file. important step reorganizing labels.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/save_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the attributes and levels, and their order, from a conjoint data set, to a CSV file. ‚Äî save_labels","text":"","code":"save_labels(.data, .filename)"},{"path":"https://yhoriuchi.github.io/projoint/reference/save_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the attributes and levels, and their order, from a conjoint data set, to a CSV file. ‚Äî save_labels","text":".data projoint_data object .filename name CSV file saved","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/save_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save the attributes and levels, and their order, from a conjoint data set, to a CSV file. ‚Äî save_labels","text":"None","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/set_qoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the quantities of interest ‚Äî set_qoi","title":"Set the quantities of interest ‚Äî set_qoi","text":"function allows users specify fine-tuned details conjoint analysis. particular, users can set specific quantities interest aside simple AMCEs MMs.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/set_qoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the quantities of interest ‚Äî set_qoi","text":"","code":"set_qoi(   .structure = \"choice_level\",   .estimand = \"mm\",   .att_choose,   .lev_choose,   .att_notchoose = NULL,   .lev_notchoose = NULL,   .att_choose_b = NULL,   .lev_choose_b = NULL,   .att_notchoose_b = NULL,   .lev_notchoose_b = NULL )"},{"path":"https://yhoriuchi.github.io/projoint/reference/set_qoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the quantities of interest ‚Äî set_qoi","text":".structure Either \"choice_level\" (default) \"profile_level\" .estimand Either \"mm\" marginal mean \"amce\" average marginal component effect .att_choose character column name identifying attribute interest (.e., attribute-level attribute-levels chosen). .lev_choose character vector identifying level levels interest (.e., attribute-level attribute-levels chosen). length 1 profile-level analysis 1+ choice-level analysis .att_notchoose character column name identifying attribute interest (.e., attribute-level attribute-levels chosen). argument specified .structure argument \"choice-level\". .lev_notchoose character vector identifying level levels interest (.e., attribute-level attribute-levels chosen). length 1 profile-level analysis 1+ choice-level analysis. argument specified .structure argument \"choice-level\". .att_choose_b [baseline AMCE] character column name identifying attribute interest (.e., attribute-level attribute-levels chosen). .lev_choose_b [baseline AMCE] character vector identifying level levels interest (.e., attribute-level attribute-levels chosen). length 1 profile-level analysis 1+ choice-level analysis .att_notchoose_b [baseline AMCE] character column name identifying attribute interest (.e., attribute-level attribute-levels chosen*). argument specified .structure argument \"choice-level\". .lev_notchoose_b [baseline AMCE]  character vector identifying level levels interest (.e., attribute-level attribute-levels chosen). length 1 profile-level analysis 1+ choice-level analysis. argument specified .structure argument \"choice-level\".","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/set_qoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the quantities of interest ‚Äî set_qoi","text":"projoint_qoi object","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/summary.projoint_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a projoint_data object ‚Äî summary.projoint_data","title":"Summarize a projoint_data object ‚Äî summary.projoint_data","text":"Custom summary method objects class `projoint_data`.","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/summary.projoint_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a projoint_data object ‚Äî summary.projoint_data","text":"","code":"# S3 method for class 'projoint_data' summary(object, ...)"},{"path":"https://yhoriuchi.github.io/projoint/reference/summary.projoint_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a projoint_data object ‚Äî summary.projoint_data","text":"object `projoint_data` object. ... Additional arguments (currently unused).","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/summary.projoint_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a projoint_data object ‚Äî summary.projoint_data","text":"summary list (invisible).","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/summary.projoint_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for projoint_results ‚Äî summary.projoint_results","title":"Summary method for projoint_results ‚Äî summary.projoint_results","text":"Summary method projoint_results","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/summary.projoint_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for projoint_results ‚Äî summary.projoint_results","text":"","code":"# S3 method for class 'projoint_results' summary(object, ...)"},{"path":"https://yhoriuchi.github.io/projoint/reference/summary.projoint_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for projoint_results ‚Äî summary.projoint_results","text":"object object class projoint_results ... Additional arguments (ignored)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/summary.projoint_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for projoint_tau objects ‚Äî summary.projoint_tau","title":"Summary method for projoint_tau objects ‚Äî summary.projoint_tau","text":"Summary method projoint_tau objects","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/summary.projoint_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for projoint_tau objects ‚Äî summary.projoint_tau","text":"","code":"# S3 method for class 'projoint_tau' summary(object, ...)"},{"path":"https://yhoriuchi.github.io/projoint/reference/summary.projoint_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for projoint_tau objects ‚Äî summary.projoint_tau","text":"object object class projoint_tau predict_tau ... Additional arguments (currently unused)","code":""},{"path":"https://yhoriuchi.github.io/projoint/reference/summary.projoint_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for projoint_tau objects ‚Äî summary.projoint_tau","text":"tibble showing IRR estimates number differing attributes.","code":""},{"path":"https://yhoriuchi.github.io/projoint/news/index.html","id":"projoint-010-2025-02-05","dir":"Changelog","previous_headings":"","what":"projoint 0.1.0 (2025-02-05)","title":"projoint 0.1.0 (2025-02-05)","text":"Initial release.","code":""},{"path":"https://yhoriuchi.github.io/projoint/news/index.html","id":"projoint-020-2025-04-20","dir":"Changelog","previous_headings":"","what":"projoint 0.2.0 (2025-04-20)","title":"projoint 0.2.0 (2025-04-20)","text":"Minor bug fixes documentation improvements. Major redesign website, including improved vignettes clearer step--step tutorial structure. Fixed input validation specifying inter-rater reliability (IRR), ensuring IRR values must 0.5 1.","code":""},{"path":"https://yhoriuchi.github.io/projoint/news/index.html","id":"projoint-030-2025-08-17","dir":"Changelog","previous_headings":"","what":"projoint 0.3.0 (2025-08-17)","title":"projoint 0.3.0 (2025-08-17)","text":"Robust SEs & clustering: fixes variance options; users can now pass arguments supported estimatr::lm_robust() clustering standard errors. reshape_projoint() overhaul: now robust arbitrary base-task orders, infers repeated base task first base outcome, requires repeated outcome last element .outcomes.","code":""},{"path":"https://yhoriuchi.github.io/projoint/news/index.html","id":"projoint-031-2025-08-18","dir":"Changelog","previous_headings":"","what":"projoint 0.3.1 (2025-08-18)","title":"projoint 0.3.1 (2025-08-18)","text":"Bug fix minor issue. Vignettes extended illustrate additional choice-level analyses.","code":""}]
